<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LightJason - TrafficSimulation: IBaseTest.java Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "TeX/AMSmath.js", "TeX/AMSsymbols.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../layout.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LightJason - TrafficSimulation
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('../../',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('db/deb/IBaseTest_8java_source.htm','../../');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">IBaseTest.java</div>  </div>
</div><!--header-->
<div class="contents">
<a href="../../db/deb/IBaseTest_8java.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @cond LICENSE</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * # LGPL License                                                                       #</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * # This file is part of the LightJason TrafficSimulation                              #</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * # Copyright (c) 2016-17, LightJason (info@lightjason.org)                            #</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * # This program is free software: you can redistribute it and/or modify               #</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * # it under the terms of the GNU Lesser General Public License as                     #</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * # published by the Free Software Foundation, either version 3 of the                 #</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * # License, or (at your option) any later version.                                    #</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * # This program is distributed in the hope that it will be useful,                    #</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * # but WITHOUT ANY WARRANTY; without even the implied warranty of                     #</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> * # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                      #</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * # GNU Lesser General Public License for more details.                                #</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * #                                                                                    #</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * # You should have received a copy of the GNU Lesser General Public License           #</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * # along with this program. If not, see http://www.gnu.org/licenses/                  #</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * ######################################################################################</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * @endcond</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">package </span>org.lightjason.trafficsimulation;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">import</span> com.tngtech.java.junit.dataprovider.UseDataProvider;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assume;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.AssumptionViolatedException;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Before;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Ignore;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Test;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.agentspeak.action.IAction;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.agentspeak.agent.IAgent;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.agentspeak.common.CCommon;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../db/d9c/namespaceorg_1_1lightjason_1_1trafficsimulation.htm">trafficsimulation</a>.<a class="code" href="../../df/dcb/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1actions.htm">actions</a>.<a class="code" href="../../d6/d7a/classorg_1_1lightjason_1_1trafficsimulation_1_1actions_1_1CBroadcast.htm">CBroadcast</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../db/d9c/namespaceorg_1_1lightjason_1_1trafficsimulation.htm">trafficsimulation</a>.<a class="code" href="../../df/dcb/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1actions.htm">actions</a>.<a class="code" href="../../d2/d94/classorg_1_1lightjason_1_1trafficsimulation_1_1actions_1_1CSend.htm">CSend</a>;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../db/d9c/namespaceorg_1_1lightjason_1_1trafficsimulation.htm">trafficsimulation</a>.<a class="code" href="../../df/d8c/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation.htm">simulation</a>.<a class="code" href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm">EObjectFactory</a>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../db/d9c/namespaceorg_1_1lightjason_1_1trafficsimulation.htm">trafficsimulation</a>.<a class="code" href="../../df/d8c/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation.htm">simulation</a>.<a class="code" href="../../d5/dea/interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1IObject.htm">IObject</a>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../db/d9c/namespaceorg_1_1lightjason_1_1trafficsimulation.htm">trafficsimulation</a>.<a class="code" href="../../df/d8c/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation.htm">simulation</a>.<a class="code" href="../../da/d92/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm.htm">algorithm</a>.<a class="code" href="../../d0/d4f/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm_1_1routing.htm">routing</a>.<a class="code" href="../../d1/dd2/interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm_1_1routing_1_1IRouting.htm">IRouting</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">import</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../db/d9c/namespaceorg_1_1lightjason_1_1trafficsimulation.htm">trafficsimulation</a>.<a class="code" href="../../df/d8c/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation.htm">simulation</a>.<a class="code" href="../../dc/de7/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1environment.htm">environment</a>.<a class="code" href="../../d5/d10/interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1environment_1_1IEnvironment.htm">IEnvironment</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">import</span> java.util.Arrays;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">import</span> java.util.List;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">import</span> java.util.Map;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">import</span> java.util.Set;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">import</span> java.util.logging.LogManager;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">import</span> java.util.stream.Collectors;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">import</span> java.util.stream.Stream;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">import</span> <span class="keyword">static</span> <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.junit.Assert.assertTrue;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm">   63</a></span>&#160;<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class </span><a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm">IBaseTest</a></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a38bd7ee9bc841f035c75beb7501be2f3">   65</a></span>&#160;    <span class="keyword">protected</span> <a class="code" href="../../d5/d10/interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1environment_1_1IEnvironment.htm">IEnvironment</a> <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a38bd7ee9bc841f035c75beb7501be2f3">m_environment</a>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a0b27c9d4057adc2ee720ae8e6f4b8c01">   67</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, IAgent&lt;?&gt;&gt; <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a0b27c9d4057adc2ee720ae8e6f4b8c01">m_agents</a> = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad60007a01d153409afb63eff1a96fdaa">   69</a></span>&#160;    <span class="keyword">private</span> <span class="keyword">final</span> Set&lt;IAction&gt; <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad60007a01d153409afb63eff1a96fdaa">m_actions</a> = Stream.concat(</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                                                Stream.of(</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                                    <span class="keyword">new</span> <a class="code" href="../../d2/d94/classorg_1_1lightjason_1_1trafficsimulation_1_1actions_1_1CSend.htm">CSend</a>( m_agents ),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                    <span class="keyword">new</span> <a class="code" href="../../d6/d7a/classorg_1_1lightjason_1_1trafficsimulation_1_1actions_1_1CBroadcast.htm">CBroadcast</a>( m_agents )</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                                ),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                                <a class="code" href="../../d5/d09/classorg_1_1lightjason_1_1trafficsimulation_1_1CCommon.htm">CCommon</a>.actionsFromPackage()</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                           ).collect( Collectors.toSet() );</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">static</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        LogManager.getLogManager().reset();</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a327cb5c02aa81015b30852a9b4a9ec80">   90</a></span>&#160;    <span class="keyword">protected</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a327cb5c02aa81015b30852a9b4a9ec80">initializeenvironment</a>( <span class="keyword">final</span> <span class="keywordtype">int</span> p_column, <span class="keyword">final</span> <span class="keywordtype">int</span> p_row, <span class="keyword">final</span> <span class="keywordtype">double</span> p_size, <span class="keyword">final</span> <a class="code" href="../../d1/dd2/interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm_1_1routing_1_1IRouting.htm">IRouting</a> p_routing ) <span class="keywordflow">throws</span> Exception</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">try</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        (</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keyword">final</span> FileInputStream l_stream = <span class="keyword">new</span> FileInputStream( <span class="stringliteral">&quot;src/test/resources/environment.asl&quot;</span> );</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        )</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            m_environment = <a class="code" href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm">EObjectFactory</a>.<a class="code" href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm#a645dde644400c5d153701551b3a4cbbc">ENVIRONMENT</a></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                .generate( l_stream, m_actions.stream() )</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                .generatesingle( p_column, p_row, p_size, p_routing )</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                .raw();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            l_exception.printStackTrace();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            assertTrue( <span class="keyword">false</span> );</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    }</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    @Before</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a37ea7abc5d3b336ba50db37ff397b8ba">  113</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a37ea7abc5d3b336ba50db37ff397b8ba">loadconfiguration</a>()</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="../../df/df4/classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration.htm">CConfiguration</a>.<a class="code" href="../../df/df4/classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration.htm#ae750d4c2ae5f3fcf9a033601880e0e78">INSTANCE</a>.<a class="code" href="../../df/df4/classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration.htm#aca440795cab5c2fe246ffb7edc27d43d">loadfile</a>( <span class="stringliteral">&quot;src/main/resources/&quot;</span> + <a class="code" href="../../db/d96/namespaceorg.htm">org</a>.<a class="code" href="../../d1/de7/namespaceorg_1_1lightjason.htm">lightjason</a>.<a class="code" href="../../db/d9c/namespaceorg_1_1lightjason_1_1trafficsimulation.htm">trafficsimulation</a>.<a class="code" href="../../d5/d09/classorg_1_1lightjason_1_1trafficsimulation_1_1CCommon.htm">CCommon</a>.<a class="code" href="../../d5/d09/classorg_1_1lightjason_1_1trafficsimulation_1_1CCommon.htm#aee2d68142ec435bb9c9b869dbb956b5e">PACKAGEPATH</a> + <span class="stringliteral">&quot;configuration.yaml&quot;</span> );</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a26710acb5a3cbd91313269e982d38579">  127</a></span>&#160;    <span class="keyword">protected</span> final &lt;T extends IObject&lt;?&gt;&gt; T <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a26710acb5a3cbd91313269e982d38579">generate</a>( <span class="keyword">final</span> String p_file, <span class="keyword">final</span> <a class="code" href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm">EObjectFactory</a> p_factory, <span class="keyword">final</span> Object... p_arguments )</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        Assume.assumeNotNull( m_actions );</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        Assume.assumeNotNull( m_environment );</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">try</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        (</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keyword">final</span> FileInputStream l_stream = <span class="keyword">new</span> FileInputStream( p_file );</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        )</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> p_factory.<a class="code" href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm#a7f649148ce89b9428f1ad535d8c71301">generate</a>( l_stream, m_actions.stream(), <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a38bd7ee9bc841f035c75beb7501be2f3">m_environment</a> ).generatesingle( p_arguments ).raw();</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            l_exception.printStackTrace();</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            assertTrue( <span class="keyword">false</span> );</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">return</span> null;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad3781b587eb67a247ea16da5e748d921">  160</a></span>&#160;    <span class="keyword">protected</span> final &lt;T extends IObject&lt;?&gt;&gt; List&lt;T&gt; <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad3781b587eb67a247ea16da5e748d921">generatemultiple</a>( <span class="keyword">final</span> String p_file, <span class="keyword">final</span> <a class="code" href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm">EObjectFactory</a> p_factory, <span class="keyword">final</span> <span class="keywordtype">int</span> p_number, <span class="keyword">final</span> Object... p_arguments )</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        Assume.assumeNotNull( m_actions );</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        Assume.assumeNotNull( m_environment );</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">try</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        (</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keyword">final</span> FileInputStream l_stream = <span class="keyword">new</span> FileInputStream( p_file );</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        )</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">return</span> p_factory.<a class="code" href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm#a7f649148ce89b9428f1ad535d8c71301">generate</a>( l_stream, m_actions.stream(), <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a38bd7ee9bc841f035c75beb7501be2f3">m_environment</a> )</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                .<a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad3781b587eb67a247ea16da5e748d921">generatemultiple</a>( p_number, p_arguments )</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                .map( i -&gt; i.&lt;T&gt;raw() )</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                .collect( Collectors.toList() );</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            l_exception.printStackTrace();</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            assertTrue( <span class="keyword">false</span> );</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">return</span> null;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a48aae710c4b5d534af6fe92fcb25e520">  192</a></span>&#160;    <span class="keyword">protected</span> static &lt;T extends IAgent&lt;?&gt;&gt; Stream&lt;T&gt; <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a48aae710c4b5d534af6fe92fcb25e520">executeagent</a>( <span class="keyword">final</span> Stream&lt;T&gt; p_agent )</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">return</span> p_agent.map( <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a48aae710c4b5d534af6fe92fcb25e520">IBaseTest::executeagent</a> );</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad24e5f21cf6c6831e1d73ffde32c5ac4">  204</a></span>&#160;    <span class="keyword">protected</span> static &lt;T extends IAgent&lt;?&gt;&gt; T <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad24e5f21cf6c6831e1d73ffde32c5ac4">executeagent</a>( <span class="keyword">final</span> T p_agent )</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">try</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            p_agent.call();</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> Exception l_exception )</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            l_exception.printStackTrace();</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            assertTrue( <span class="keyword">false</span> );</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">return</span> p_agent;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    }</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a30660d966a228cd681a34edf531253ab">  223</a></span>&#160;    <span class="keyword">protected</span> <span class="keyword">final</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a30660d966a228cd681a34edf531253ab">invoketest</a>()</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keyword">final</span> Set&lt;Method&gt; l_before = this.<a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a2ddcd9f229590c4aba0bb7f16cd46a78">before</a>();</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        Arrays.stream( this.getClass().getMethods() )</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;              .filter( i -&gt; i.getAnnotation( Test.class ) != null )</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;              .filter( i -&gt; i.getAnnotation( Ignore.class ) == null )</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;              .forEach( i -&gt; this.<a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a3ddd0bcf774d2877cdfd068f7b74f121">invoke</a>( i, l_before ) );</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a3ddd0bcf774d2877cdfd068f7b74f121">  239</a></span>&#160;    <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a3ddd0bcf774d2877cdfd068f7b74f121">invoke</a>( <span class="keyword">final</span> Method p_method, <span class="keyword">final</span> Set&lt;Method&gt; p_before )</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    {</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="comment">// method uses a data-provider</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">if</span> ( p_method.getAnnotation( UseDataProvider.class ) == null )</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            this.<a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a969ee3466db626521249bda39e8ae9f8">execute</a>( p_method, p_before );</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        {</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keyword">final</span> Object[] l_arguments;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">try</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                l_arguments = (Object[]) this.getClass().getDeclaredMethod( p_method.getAnnotation( UseDataProvider.class ).value() ).<a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a3ddd0bcf774d2877cdfd068f7b74f121">invoke</a>( null );</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="keywordflow">catch</span> ( <span class="keyword">final</span> InvocationTargetException l_exception )</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                Assert.assertTrue( l_exception.getTargetException().toString(), false );</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">catch</span> ( <span class="keyword">final</span> IllegalAccessException | NoSuchMethodException l_exception )</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                Assert.assertTrue( l_exception.toString(), false );</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            Arrays.stream( l_arguments ).forEach( i -&gt; this.<a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a969ee3466db626521249bda39e8ae9f8">execute</a>( p_method, p_before, i ) );</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a969ee3466db626521249bda39e8ae9f8">  275</a></span>&#160;    <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a969ee3466db626521249bda39e8ae9f8">execute</a>( <span class="keyword">final</span> Method p_method, <span class="keyword">final</span> Set&lt;Method&gt; p_before, <span class="keyword">final</span> Object... p_arguments )</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    {</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">try</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <span class="keywordflow">if</span> ( !p_before.isEmpty() )</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                p_before.forEach( i -&gt;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                {</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                    try</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                    {</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                        i.invoke( this );</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                    }</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                    catch ( <span class="keyword">final</span> IllegalAccessException | InvocationTargetException l_exception )</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                    {</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                        l_exception.printStackTrace();</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                        Assert.assertTrue( <span class="keyword">false</span> );</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                    }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                } );</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            p_method.invoke( <span class="keyword">this</span>, p_arguments );</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> AssumptionViolatedException l_exception )</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        {</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        }</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> InvocationTargetException l_exception )</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">if</span> ( l_exception.getTargetException() instanceof AssumptionViolatedException )</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keywordflow">if</span> ( !p_method.getAnnotation( Test.class ).expected().isInstance( l_exception.getTargetException() ) )</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            {</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                l_exception.getTargetException().printStackTrace();</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                Assert.assertTrue( <span class="keyword">false</span> );</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        }</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">catch</span> ( <span class="keyword">final</span> IllegalAccessException l_exception )</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        {</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            Assert.assertTrue( l_exception.toString(), false );</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        }</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    }</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a2ddcd9f229590c4aba0bb7f16cd46a78">  320</a></span>&#160;    <span class="keyword">private</span> Set&lt;Method&gt; <a class="code" href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a2ddcd9f229590c4aba0bb7f16cd46a78">before</a>()</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="keywordflow">return</span> Arrays.stream( this.getClass().getMethods() )</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                     .filter( i -&gt; i.getAnnotation( Before.class ) != null )</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                     .filter( i -&gt; i.getAnnotation( Ignore.class ) == null )</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                     .collect( Collectors.toSet() );</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    }</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div><div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a37ea7abc5d3b336ba50db37ff397b8ba"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a37ea7abc5d3b336ba50db37ff397b8ba">org.lightjason.trafficsimulation.IBaseTest.loadconfiguration</a></div><div class="ttdeci">final void loadconfiguration()</div><div class="ttdoc">load configuration from yaml file </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00113">IBaseTest.java:113</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1CCommon_htm_aee2d68142ec435bb9c9b869dbb956b5e"><div class="ttname"><a href="../../d5/d09/classorg_1_1lightjason_1_1trafficsimulation_1_1CCommon.htm#aee2d68142ec435bb9c9b869dbb956b5e">org.lightjason.trafficsimulation.CCommon.PACKAGEPATH</a></div><div class="ttdeci">static final String PACKAGEPATH</div><div class="ttdoc">package path </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d54/CCommon_8java_source.htm#l00048">CCommon.java:48</a></div></div>
<div class="ttc" id="enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory_htm"><div class="ttname"><a href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm">org.lightjason.trafficsimulation.simulation.EObjectFactory</a></div><div class="ttdoc">class for generating object-generators </div><div class="ttdef"><b>Definition:</b> <a href="../../de/d08/EObjectFactory_8java_source.htm#l00046">EObjectFactory.java:46</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1IObject_htm"><div class="ttname"><a href="../../d5/dea/interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1IObject.htm">org.lightjason.trafficsimulation.simulation.IObject</a></div><div class="ttdoc">object interface </div><div class="ttdef"><b>Definition:</b> <a href="../../d7/dd2/IObject_8java_source.htm#l00037">IObject.java:37</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration_htm_ae750d4c2ae5f3fcf9a033601880e0e78"><div class="ttname"><a href="../../df/df4/classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration.htm#ae750d4c2ae5f3fcf9a033601880e0e78">org.lightjason.trafficsimulation.CConfiguration.INSTANCE</a></div><div class="ttdeci">static final CConfiguration INSTANCE</div><div class="ttdoc">singleton instance </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d80/CConfiguration_8java_source.htm#l00059">CConfiguration.java:59</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1trafficsimulation_1_1actions_htm"><div class="ttname"><a href="../../df/dcb/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1actions.htm">org.lightjason.trafficsimulation.actions</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d72/CBroadcast_8java_source.htm#l00024">CBroadcast.java:24</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration_htm"><div class="ttname"><a href="../../df/df4/classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration.htm">org.lightjason.trafficsimulation.CConfiguration</a></div><div class="ttdoc">configuration and initialization of all simulation objects </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d80/CConfiguration_8java_source.htm#l00054">CConfiguration.java:54</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a327cb5c02aa81015b30852a9b4a9ec80"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a327cb5c02aa81015b30852a9b4a9ec80">org.lightjason.trafficsimulation.IBaseTest.initializeenvironment</a></div><div class="ttdeci">final void initializeenvironment(final int p_column, final int p_row, final double p_size, final IRouting p_routing)</div><div class="ttdoc">initialize environment </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00090">IBaseTest.java:90</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_ad60007a01d153409afb63eff1a96fdaa"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad60007a01d153409afb63eff1a96fdaa">org.lightjason.trafficsimulation.IBaseTest.m_actions</a></div><div class="ttdeci">final Set&lt; IAction &gt; m_actions</div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00069">IBaseTest.java:69</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1CCommon_htm"><div class="ttname"><a href="../../d5/d09/classorg_1_1lightjason_1_1trafficsimulation_1_1CCommon.htm">org.lightjason.trafficsimulation.CCommon</a></div><div class="ttdoc">common class </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d54/CCommon_8java_source.htm#l00043">CCommon.java:43</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a3ddd0bcf774d2877cdfd068f7b74f121"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a3ddd0bcf774d2877cdfd068f7b74f121">org.lightjason.trafficsimulation.IBaseTest.invoke</a></div><div class="ttdeci">void invoke(final Method p_method, final Set&lt; Method &gt; p_before)</div><div class="ttdoc">invoke method and read if possible the data-provider </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00239">IBaseTest.java:239</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1actions_1_1CBroadcast_htm"><div class="ttname"><a href="../../d6/d7a/classorg_1_1lightjason_1_1trafficsimulation_1_1actions_1_1CBroadcast.htm">org.lightjason.trafficsimulation.actions.CBroadcast</a></div><div class="ttdoc">class broadcast </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d72/CBroadcast_8java_source.htm#l00052">CBroadcast.java:52</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a38bd7ee9bc841f035c75beb7501be2f3"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a38bd7ee9bc841f035c75beb7501be2f3">org.lightjason.trafficsimulation.IBaseTest.m_environment</a></div><div class="ttdeci">IEnvironment m_environment</div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00065">IBaseTest.java:65</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_htm"><div class="ttname"><a href="../../d1/de7/namespaceorg_1_1lightjason.htm">org.lightjason</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm">org.lightjason.trafficsimulation.IBaseTest</a></div><div class="ttdoc">base test </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00063">IBaseTest.java:63</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration_htm_aca440795cab5c2fe246ffb7edc27d43d"><div class="ttname"><a href="../../df/df4/classorg_1_1lightjason_1_1trafficsimulation_1_1CConfiguration.htm#aca440795cab5c2fe246ffb7edc27d43d">org.lightjason.trafficsimulation.CConfiguration.loadfile</a></div><div class="ttdeci">final CConfiguration loadfile(final String p_path)</div><div class="ttdoc">loads the configuration </div><div class="ttdef"><b>Definition:</b> <a href="../../d0/d80/CConfiguration_8java_source.htm#l00085">CConfiguration.java:85</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1trafficsimulation_htm"><div class="ttname"><a href="../../db/d9c/namespaceorg_1_1lightjason_1_1trafficsimulation.htm">org.lightjason.trafficsimulation</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a2ddcd9f229590c4aba0bb7f16cd46a78"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a2ddcd9f229590c4aba0bb7f16cd46a78">org.lightjason.trafficsimulation.IBaseTest.before</a></div><div class="ttdeci">Set&lt; Method &gt; before()</div><div class="ttdoc">reads the before annotated methods </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00320">IBaseTest.java:320</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm_htm"><div class="ttname"><a href="../../da/d92/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm.htm">org.lightjason.trafficsimulation.simulation.algorithm</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_ad3781b587eb67a247ea16da5e748d921"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad3781b587eb67a247ea16da5e748d921">org.lightjason.trafficsimulation.IBaseTest.generatemultiple</a></div><div class="ttdeci">final&lt; T extends IObject&lt;?&gt; &gt; List&lt; T &gt; generatemultiple(final String p_file, final EObjectFactory p_factory, final int p_number, final Object... p_arguments)</div><div class="ttdoc">runs the object generation proecess </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00160">IBaseTest.java:160</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a0b27c9d4057adc2ee720ae8e6f4b8c01"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a0b27c9d4057adc2ee720ae8e6f4b8c01">org.lightjason.trafficsimulation.IBaseTest.m_agents</a></div><div class="ttdeci">final Map&lt; String, IAgent&lt;?&gt; &gt; m_agents</div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00067">IBaseTest.java:67</a></div></div>
<div class="ttc" id="enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory_htm_a7f649148ce89b9428f1ad535d8c71301"><div class="ttname"><a href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm#a7f649148ce89b9428f1ad535d8c71301">org.lightjason.trafficsimulation.simulation.EObjectFactory.generate</a></div><div class="ttdeci">final IAgentGenerator&lt;? extends IObject&lt;?&gt; &gt; generate(final InputStream p_stream, final Stream&lt; IAction &gt; p_actions, final IEnvironment p_environment)</div><div class="ttdoc">generates a agent generator </div><div class="ttdef"><b>Definition:</b> <a href="../../de/d08/EObjectFactory_8java_source.htm#l00070">EObjectFactory.java:70</a></div></div>
<div class="ttc" id="namespaceorg_htm"><div class="ttname"><a href="../../db/d96/namespaceorg.htm">org</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1actions_1_1CSend_htm"><div class="ttname"><a href="../../d2/d94/classorg_1_1lightjason_1_1trafficsimulation_1_1actions_1_1CSend.htm">org.lightjason.trafficsimulation.actions.CSend</a></div><div class="ttdoc">send action </div><div class="ttdef"><b>Definition:</b> <a href="../../de/d02/CSend_8java_source.htm#l00050">CSend.java:50</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm_1_1routing_1_1IRouting_htm"><div class="ttname"><a href="../../d1/dd2/interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm_1_1routing_1_1IRouting.htm">org.lightjason.trafficsimulation.simulation.algorithm.routing.IRouting</a></div><div class="ttdoc">routing interface </div><div class="ttdef"><b>Definition:</b> <a href="../../df/df6/IRouting_8java_source.htm#l00037">IRouting.java:37</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_htm"><div class="ttname"><a href="../../df/d8c/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation.htm">org.lightjason.trafficsimulation.simulation</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a969ee3466db626521249bda39e8ae9f8"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a969ee3466db626521249bda39e8ae9f8">org.lightjason.trafficsimulation.IBaseTest.execute</a></div><div class="ttdeci">void execute(final Method p_method, final Set&lt; Method &gt; p_before, final Object... p_arguments)</div><div class="ttdoc">invokes the method within the current object context </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00275">IBaseTest.java:275</a></div></div>
<div class="ttc" id="interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1environment_1_1IEnvironment_htm"><div class="ttname"><a href="../../d5/d10/interfaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1environment_1_1IEnvironment.htm">org.lightjason.trafficsimulation.simulation.environment.IEnvironment</a></div><div class="ttdoc">environment interface </div><div class="ttdef"><b>Definition:</b> <a href="../../dc/db0/IEnvironment_8java_source.htm#l00037">IEnvironment.java:37</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a48aae710c4b5d534af6fe92fcb25e520"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a48aae710c4b5d534af6fe92fcb25e520">org.lightjason.trafficsimulation.IBaseTest.executeagent</a></div><div class="ttdeci">static&lt; T extends IAgent&lt;?&gt; Stream&lt; T &gt; executeagent(final Stream&lt; T &gt; p_agent)</div><div class="ttdoc">executes a stream of agents </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00192">IBaseTest.java:192</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm_1_1routing_htm"><div class="ttname"><a href="../../d0/d4f/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1algorithm_1_1routing.htm">org.lightjason.trafficsimulation.simulation.algorithm.routing</a></div><div class="ttdef"><b>Definition:</b> <a href="../../d5/ded/CJPSPlus_8java_source.htm#l00024">CJPSPlus.java:24</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a26710acb5a3cbd91313269e982d38579"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a26710acb5a3cbd91313269e982d38579">org.lightjason.trafficsimulation.IBaseTest.generate</a></div><div class="ttdeci">final&lt; T extends IObject&lt;?&gt; &gt; T generate(final String p_file, final EObjectFactory p_factory, final Object... p_arguments)</div><div class="ttdoc">runs the object generation proecess </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00127">IBaseTest.java:127</a></div></div>
<div class="ttc" id="namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1environment_htm"><div class="ttname"><a href="../../dc/de7/namespaceorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1environment.htm">org.lightjason.trafficsimulation.simulation.environment</a></div><div class="ttdef"><b>Definition:</b> <a href="../../da/da0/CEnvironment_8java_source.htm#l00025">CEnvironment.java:25</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_ad24e5f21cf6c6831e1d73ffde32c5ac4"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#ad24e5f21cf6c6831e1d73ffde32c5ac4">org.lightjason.trafficsimulation.IBaseTest.executeagent</a></div><div class="ttdeci">static&lt; T extends IAgent&lt;?&gt; T executeagent(final T p_agent)</div><div class="ttdoc">execute a single agent </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00204">IBaseTest.java:204</a></div></div>
<div class="ttc" id="classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest_htm_a30660d966a228cd681a34edf531253ab"><div class="ttname"><a href="../../dd/d4d/classorg_1_1lightjason_1_1trafficsimulation_1_1IBaseTest.htm#a30660d966a228cd681a34edf531253ab">org.lightjason.trafficsimulation.IBaseTest.invoketest</a></div><div class="ttdeci">final void invoketest()</div><div class="ttdoc">invoke all test manually </div><div class="ttdef"><b>Definition:</b> <a href="../../db/deb/IBaseTest_8java_source.htm#l00223">IBaseTest.java:223</a></div></div>
<div class="ttc" id="enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory_htm_a645dde644400c5d153701551b3a4cbbc"><div class="ttname"><a href="../../df/d31/enumorg_1_1lightjason_1_1trafficsimulation_1_1simulation_1_1EObjectFactory.htm#a645dde644400c5d153701551b3a4cbbc">org.lightjason.trafficsimulation.simulation.EObjectFactory.ENVIRONMENT</a></div><div class="ttdeci">ENVIRONMENT</div><div class="ttdef"><b>Definition:</b> <a href="../../de/d08/EObjectFactory_8java_source.htm#l00048">EObjectFactory.java:48</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li><li class="navelem"><a class="el" href="../../dir_120ed4da3e3217b1e7fc0b4f48568e79.htm">test</a></li><li class="navelem"><a class="el" href="../../dir_97debbc39e3b917fca663601bb2b0709.htm">java</a></li><li class="navelem"><a class="el" href="../../dir_96589a7c16c3e343f1421d4211dea239.htm">org</a></li><li class="navelem"><a class="el" href="../../dir_4a277734df853a199aee4e8ea5127bc7.htm">lightjason</a></li><li class="navelem"><a class="el" href="../../dir_43b2503bfbde120904b6b12232ffe701.htm">trafficsimulation</a></li><li class="navelem"><a class="el" href="../../db/deb/IBaseTest_8java.htm">IBaseTest.java</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
